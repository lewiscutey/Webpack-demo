{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/d.js","webpack:///./src/index.js"],"names":[],"mappings":";QAAA;QACA;QACA;QACA;QACA;;QAEA;QACA;QACA;QACA,QAAQ,oBAAoB;QAC5B;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA,iBAAiB,4BAA4B;QAC7C;QACA;QACA,kBAAkB,2BAA2B;QAC7C;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;;QAEA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;QAEA;QACA;QACA;QACA;QACA,gBAAgB,uBAAuB;QACvC;;;QAGA;QACA;QACA;QACA;;;;;;;;;;;;;ACvJA;AAAA;AAAA;AAAO;AACP;AACA;AACO;;AAEP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd,YAAY;AACZ,UAAU;;AAEV;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0FAA0F;AAC1F,mBAAmB,mBAAmB,mBAAmB,mCAAmC,MAAM,EAAE;AACpG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;;AAEZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,oBAAoB,GAAG,eAAe,GAAG,UAAU;AACzF;AACA,wDAAwD;AACxD,2CAA2C,UAAU,GAAG;AACxD;AACA,kBAAkB;AAClB;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,gFAAgF;AAChF;AACA;AACA;AACA,sCAAsC,oBAAoB,GAAG,eAAe,GAAG,KAAK;AACpF;AACA,+DAA+D,KAAK,OAAO;AAC3E,2CAA2C,UAAU,GAAG;AACxD;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;;;;;;;;;;;;;AC3JA;AAAA;AAAA;AAA0B;AACA;AAC1B;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB;AACA,8CAAG;AACH;AACA;AACA,8CAAG,S","file":"index.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"index\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([\"./src/index.js\",\"sync-commons~app~index\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","export function mod(a, b) {\n  return a % b\n}\nexport const d = 'd'\n\n// class ExtractChunksPlugin {\n//   constructor(options) {\n//     this.options = options\n//     this.chunkPath = options.chunkPath || 'Chunks'\n//   }\n\n//   apply(compiler) {\n//     compiler.hooks.thisCompilation.tap(pluginName, compilation => {\n//       // 抽取公共chunk\n//       compilation.hooks.optimizeDependenciesAdvanced.tap(pluginName, modules => {\n//         for (const module of modules) {\n//           // 被依赖小于2，不会当做公共chunk进行抽取\n//           if (module.reasons.length < 2) continue\n\n//           const chunkName = module.resource.match(/\\w+(?=\\.)/gi)[0]\n//           const hasChunkName = hasChunk(chunkName, compilation)\n//           if (hasChunkName) continue\n\n//           const newChunk = compilation.addChunk(chunkName)\n//           debugger\n\n//           // Module内部会进行关联，这个方法判断如果已经存在这个chunk，则返回false；\n//           if (module.addChunk(newChunk)) {\n//             newChunk.addModule(module)\n//             extractModules.set(chunkName, module)\n//           }\n\n//           if (newChunk.groupsIterable.chunkGroup) {\n//             newChunk.groupsIterable.chunkGroup.addChild(newChunk)\n//           }\n\n//           newChunk.hasExistedChunk = true\n//         }\n//       })\n\n//       // 移除页面Chunk中已经存在的公共module，因为这个公共module已经以单独chunk的形式存在\n//       compilation.hooks.optimizeChunks.tap(pluginName, chunks => {\n//         chunks.forEach(chunk => {\n//           extractModules.forEach(module => {\n//             if (chunk.containsModule(module) && chunk.hasEntryModule()) {\n//               chunk.removeModule(module)\n//               module.removeChunk(chunk)\n//             }\n//           })\n//         })\n//       })\n\n//       // 各个chunk配置附加参数及全局quickappGlobal\n//       compilation.hooks.chunkAsset.tap(pluginName, (chunk, filename) => {\n//         const sourceChildren = compilation.assets[filename]._source.children\n\n//         let _actualParamStr = actualParamStr\n//         let _formalParamStr = formalParamStr\n//         if (chunk.entryModule) {\n//           // sourceChildren.splice(1, 0, quickappGlobal)\n//           _actualParamStr = actualModuleRequireParam\n//             .concat(appModuleRequireNativeFunctions)\n//             .join(', ')\n//           _formalParamStr = formalModuleRequireParam\n//             .concat(appModuleRequireNativeFunctions)\n//             .join(', ')\n//         }\n\n//         sourceChildren.forEach((item, index) => {\n//           // 运行时的源码形式\n//           if (item.constructor.name === 'PrefixSource') {\n//             let content = item._source._value\n//             // window -> global\n//             content = windowReplaceWithGlobal(content)\n//             content = content.replace(\n//               /(?<=(if\\(installedChunks\\[depId\\]\\s+!==\\s+0\\)\\s+))fulfilled\\s+=\\s+false;/,\n//               '{ fulfilled = false; $app_evaluate$(`${quickappGlobal.chunkFileMap[depId]}.js`); }' // eslint-disable-line\n//             )\n//             // 引入额外方法\n//             content = content.replace(\n//               /(?<=(modules\\[moduleId\\].call\\())module.exports,\\s+module,\\s+module.exports,\\s+__webpack_require__/,\n//               _actualParamStr\n//             )\n//             item._source._value = content\n//           } else if (item.constructor.name === 'String') {\n//             // window -> global\n//             let content = windowReplaceWithGlobal(item)\n//             // 引入额外方法\n//             content = content.replace(\n//               /(?<=function\\()module,\\s+__webpack_exports__(,\\s+__webpack_require__)?/,\n//               _formalParamStr\n//             )\n//             sourceChildren[index] = content\n//           }\n//         })\n\n//         // 抽取的chunk放到配置的（默认为Chunks）文件夹下\n//         if (chunk.hasExistedChunk) {\n//           let tempFile = compilation.assets[filename]\n//           delete compilation.assets[filename]\n//           let newFilename = this.chunkPath + '/' + filename\n//           chunk.files = chunk.files.map(item => {\n//             if (item === filename) {\n//               return newFilename\n//             }\n//           })\n//           compilation.assets[newFilename] = tempFile\n//         }\n//       })\n\n//       // 把引用公共chunk的方式替换为$app_evaluate$\n//       compilation.moduleTemplates.javascript.hooks.render.tap(\n//         pluginName,\n//         moduleSourcePostModule => {\n//           // 配置为sourcemap的源码形式\n//           if (moduleSourcePostModule.constructor.name === 'CachedSource') {\n//             let source = moduleSourcePostModule._source\n//             if (\n//               source &&\n//               source.constructor.name === 'ReplaceSource' &&\n//               source.replacements &&\n//               source.replacements.length\n//             ) {\n//               source.replacements.map(items => {\n//                 let chunkName =\n//                   items.content.match(/\\w+(?=\\.js)/gi) && items.content.match(/\\w+(?=\\.js)/gi)[0]\n//                 let chunkPath = `${compiler.outputPath}/${this.chunkPath}/${chunkName}.js`\n//                 items.content = items.content.replace(\n//                   /\\s=\\s__webpack_require__\\((.+?)\\);/,\n//                   ` = $app_evaluate$('${chunkPath}');` // eslint-disable-line\n//                 )\n//               })\n//             }\n//             moduleSourcePostModule._source = source\n//           } else if (moduleSourcePostModule.constructor.name === 'RawSource') {\n//             // 默认为eval的源码形式\n//             let value = moduleSourcePostModule._value\n//             if (value) {\n//               let chunkName = value.match(/\\s=\\s__webpack_require__\\((.+?)\\);/gi)\n//               chunkName && chunkName.map(item => {\n//                 item = item.match(/(\\w+)\\s+/ig) && item.match(/(\\w+)\\s+/ig)[0] && item.match(/(\\w+)\\s+/ig)[0].slice(0, -1)\n//                 if(!extractModules.get(item)) return\n//                 let chunkPath = `${compiler.outputPath}/${this.chunkPath}/${item}.js`\n//                 value = value.replace(\n//                   new RegExp(` = __webpack_require__((.+?)${item}(.+?));`, 'i'),\n//                   ` = $app_evaluate$('${chunkPath}');` // eslint-disable-line\n//                 )\n//               })\n//             }\n//             moduleSourcePostModule._value = value\n//           }\n//         }\n//       )\n//     })\n//   }\n// }\n","import { add } from \"./b\";\nimport { mod } from \"./d\";\n// import './a.scss'\n// import { del } from './common1/aa'\n// import { del as del1 } from './common/aa'\n// import Vue from 'vue'\nadd(1, 2)\n// del(1, 2)\n// del1(1, 2)\nmod(100, 11)"],"sourceRoot":""}